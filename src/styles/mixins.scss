// 导入变量
@import './variables.scss';

// 响应式设计混入
// ========================================

@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-sm - 1px}) {
      @content;
    }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) {
      @content;
    }
  }
  @if $breakpoint == 2xl {
    @media (min-width: #{$breakpoint-2xl}) {
      @content;
    }
  }
}

@mixin respond-between($min, $max) {
  @media (min-width: #{$min}) and (max-width: #{$max - 1px}) {
    @content;
  }
}

// 布局混入
// ========================================

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-full {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

@mixin fixed-full {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// 文本样式混入
// ========================================

@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin text-gradient($start-color, $end-color, $direction: 45deg) {
  background: linear-gradient($direction, $start-color, $end-color);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// 按钮样式混入
// ========================================

@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover {
    color: $color;
    background-color: darken($background, 7.5%);
    border-color: darken($border, 10%);
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: darken($background, 7.5%);
    border-color: darken($border, 10%);
    box-shadow: 0 0 0 0.2rem rgba($border, 0.5);
  }

  &:active,
  &.active {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12.5%);
  }

  &:disabled,
  &.disabled {
    color: $color;
    background-color: $background;
    border-color: $border;
    opacity: 0.65;
  }
}

@mixin button-outline-variant($color) {
  color: $color;
  border-color: $color;
  background-color: transparent;

  &:hover {
    color: #fff;
    background-color: $color;
    border-color: $color;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($color, 0.5);
  }

  &:active,
  &.active {
    color: #fff;
    background-color: darken($color, 10%);
    border-color: darken($color, 12.5%);
  }

  &:disabled,
  &.disabled {
    color: $color;
    background-color: transparent;
  }
}

@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  border-radius: $border-radius;
}

// 卡片样式混入
// ========================================

@mixin card($padding: $card-padding, $border-radius: $card-border-radius, $shadow: $box-shadow-light) {
  background: $bg-color;
  border: 1px solid $border-color-light;
  border-radius: $border-radius;
  box-shadow: $shadow;
  padding: $padding;
  transition: $transition-all;

  [data-theme="dark"] & {
    background: $dark-bg-color-mute;
    border-color: $dark-border-color-light;
    box-shadow: $dark-box-shadow-light;
  }
}

@mixin card-hover($shadow-hover: $box-shadow-base) {
  &:hover {
    box-shadow: $shadow-hover;
    transform: translateY(-2px);

    [data-theme="dark"] & {
      box-shadow: $dark-box-shadow-base;
    }
  }
}

// 表单样式混入
// ========================================

@mixin form-control {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  color: $text-color-regular;
  background-color: $bg-color;
  background-image: none;
  border: 1px solid $border-color-base;
  border-radius: $border-radius-base;
  transition: $transition-color, box-shadow 0.15s ease-in-out;

  &:focus {
    color: $text-color-regular;
    background-color: $bg-color;
    border-color: $primary-color;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba($primary-color, 0.25);
  }

  &::placeholder {
    color: $text-color-placeholder;
    opacity: 1;
  }

  &:disabled,
  &[readonly] {
    background-color: $fill-color-light;
    opacity: 1;
  }

  [data-theme="dark"] & {
    color: $dark-text-color-1;
    background-color: $dark-bg-color-mute;
    border-color: $dark-border-color;

    &:focus {
      border-color: $primary-color;
      box-shadow: 0 0 0 0.2rem rgba($primary-color, 0.25);
    }

    &::placeholder {
      color: $dark-text-color-4;
    }

    &:disabled,
    &[readonly] {
      background-color: $dark-bg-color-soft;
    }
  }
}

// 动画混入
// ========================================

@mixin fade-in($duration: $transition-duration-base) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@mixin fade-out($duration: $transition-duration-base) {
  opacity: 1;
  animation: fadeOut $duration ease-in-out forwards;
}

@mixin slide-in-up($duration: $transition-duration-base) {
  transform: translateY(20px);
  opacity: 0;
  animation: slideInUp $duration ease-out forwards;
}

@mixin slide-in-down($duration: $transition-duration-base) {
  transform: translateY(-20px);
  opacity: 0;
  animation: slideInDown $duration ease-out forwards;
}

@mixin slide-in-left($duration: $transition-duration-base) {
  transform: translateX(-20px);
  opacity: 0;
  animation: slideInLeft $duration ease-out forwards;
}

@mixin slide-in-right($duration: $transition-duration-base) {
  transform: translateX(20px);
  opacity: 0;
  animation: slideInRight $duration ease-out forwards;
}

@mixin scale-in($duration: $transition-duration-base) {
  transform: scale(0.8);
  opacity: 0;
  animation: scaleIn $duration ease-out forwards;
}

@mixin bounce($duration: 0.6s) {
  animation: bounce $duration ease-in-out;
}

@mixin pulse($duration: 2s) {
  animation: pulse $duration infinite;
}

@mixin shake($duration: 0.6s) {
  animation: shake $duration ease-in-out;
}

// 清除浮动
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// 隐藏元素（保留屏幕阅读器可访问性）
@mixin sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// 滚动条样式
@mixin scrollbar($size: 8px, $track-color: #f1f1f1, $thumb-color: #c1c1c1) {
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: calc($size / 2);
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: calc($size / 2);
    
    &:hover {
      background: darken($thumb-color, 15%);
    }
  }

  [data-theme="dark"] & {
    &::-webkit-scrollbar-track {
      background: #2c2c2c;
    }

    &::-webkit-scrollbar-thumb {
      background: #555;

      &:hover {
        background: #777;
      }
    }
  }
}

// 模糊效果
@mixin backdrop-blur($blur: 10px, $bg-color: rgba(255, 255, 255, 0.8)) {
  background: $bg-color;
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);

  @supports not (backdrop-filter: blur($blur)) {
    background: rgba(255, 255, 255, 0.9);
  }

  [data-theme="dark"] & {
    background: rgba(0, 0, 0, 0.8);
    
    @supports not (backdrop-filter: blur($blur)) {
      background: rgba(0, 0, 0, 0.9);
    }
  }
}

// 渐变背景
@mixin gradient-bg($start-color, $end-color, $direction: 135deg) {
  background: linear-gradient($direction, $start-color 0%, $end-color 100%);
}

// 边框渐变
@mixin gradient-border($width: 1px, $start-color: $primary-color, $end-color: lighten($primary-color, 20%), $radius: $border-radius-base) {
  position: relative;
  border-radius: $radius;
  
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: $width;
    background: linear-gradient(45deg, $start-color, $end-color);
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
  }
}

// 状态色彩混入
@mixin state-variant($state) {
  @if $state == 'primary' {
    color: $primary-color;
    background-color: $primary-light-9;
    border-color: $primary-light-5;
  } @else if $state == 'success' {
    color: $success-color;
    background-color: $success-extra-light;
    border-color: $success-lighter;
  } @else if $state == 'warning' {
    color: $warning-color;
    background-color: $warning-extra-light;
    border-color: $warning-lighter;
  } @else if $state == 'danger' {
    color: $danger-color;
    background-color: $danger-extra-light;
    border-color: $danger-lighter;
  } @else if $state == 'info' {
    color: $info-color;
    background-color: $fill-color-light;
    border-color: $border-color-lighter;
  }
}

// 加载动画
@mixin loading-spinner($size: 20px, $color: $primary-color, $thickness: 2px) {
  width: $size;
  height: $size;
  border: $thickness solid rgba($color, 0.2);
  border-left-color: $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

// 工具混入
// ========================================

// 生成状态变量
@mixin generate-state-variants($property, $prefix: '') {
  @each $state, $color in $status-colors {
    #{if($prefix != '', $prefix + '-', '')}&--#{$state} {
      #{$property}: $color;
    }
  }
}

// 生成间距类
@mixin generate-spacing($property, $prefix: '') {
  $spacings: (
    'xs': $spacing-xs,
    'sm': $spacing-sm,
    'md': $spacing-md,
    'lg': $spacing-lg,
    'xl': $spacing-xl,
    '2xl': $spacing-2xl,
    '3xl': $spacing-3xl
  );

  @each $name, $value in $spacings {
    #{if($prefix != '', $prefix + '-', '')}&--#{$name} {
      #{$property}: $value;
    }
  }
}

// 性能优化
@mixin will-change($property: auto) {
  will-change: $property;
}

@mixin gpu-acceleration {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

// 打印样式
@mixin print-styles {
  @media print {
    @content;
  }
}

// 高对比度模式
@mixin high-contrast {
  @media (prefers-contrast: high) {
    @content;
  }
}

// 减少动画模式
@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// 暗色主题混入
@mixin dark-mode {
  [data-theme="dark"] & {
    @content;
  }
}

// 关键帧动画定义
// ========================================

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes slideInUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    transform: translate3d(0, -30px, 0);
  }
  70% {
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-10px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(10px);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}